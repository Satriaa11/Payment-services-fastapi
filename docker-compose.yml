# version: '3.9'

services:
  api-gateway:
    build:
      context: ./api-gateway
    container_name: api-gateway
    ports:
      - "8000:8000"
    env_file:
      - .env # Your app configs (no secrets here)
    depends_on:
      - auth-service
      - user-service
      - flights-service
      - ferries-service
      - hotels-service
      - ppob-service
      - payment-service
      - transaction-service
    networks:
      - tiketq-net
    restart: unless-stopped

  auth-service:
    build:
      context: ./auth-service
    container_name: auth-service
    ports:
      - "8001:8000" # temporary expose for testing
    env_file:
      - .env
    networks:
      - tiketq-net
    restart: unless-stopped

  user-service:
    build:
      context: ./user-service
    container_name: user-service
    env_file:
      - .env
    networks:
      - tiketq-net
    restart: unless-stopped

  flights-service:
    build:
      context: ./flights-service
    container_name: flights-service
    networks:
      - tiketq-net
    restart: unless-stopped

  ferries-service:
    build:
      context: ./ferries-service
    container_name: ferries-service
    networks:
      - tiketq-net
    restart: unless-stopped

  hotels-service:
    build:
      context: ./hotels-service
    container_name: hotels-service
    networks:
      - tiketq-net
    restart: unless-stopped

  ppob-service:
    build:
      context: ./ppob-service
    container_name: ppob-service
    networks:
      - tiketq-net
    restart: unless-stopped

  payment-service:
    build:
      context: ./payment-service
    container_name: payment-service
    ports:
      - "8003:8000" # temporary expose e.g. localhost:8003/docs
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=tiketq_db
      - SERVICE_NAME=payment-service
    depends_on:
      - postgres
    networks:
      - tiketq-net
    secrets:
      - db_user
      - db_password
    restart: unless-stopped
    volumes:
      - ./payment-service:/app # For development hot reload

  transaction-service:
    build:
      context: ./transaction-service
    container_name: transaction-service
    ports:
      - "8004:8000" # temporary expose e.g. localhost:8004/docs
    env_file:
      - .env
    networks:
      - tiketq-net
    restart: unless-stopped

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: tiketq_db
      POSTGRES_USER_FILE: /run/secrets/db_user
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - tiketq-net
    secrets:
      - db_user
      - db_password
    restart: unless-stopped

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - tiketq-net
    restart: unless-stopped

secrets:
  db_user:
    file: ./secrets/db_user.txt
  db_password:
    file: ./secrets/db_password.txt

networks:
  tiketq-net:
    driver: bridge

volumes:
  postgres_data:
